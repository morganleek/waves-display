{
  "{\"assumptions\":{},\"sourceRoot\":\"/var/www/wpw/wp-content/plugins/waves-display/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/var/www/wpw/wp-content/plugins/waves-display\",\"filename\":\"/var/www/wpw/wp-content/plugins/waves-display/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/wpw/wp-content/plugins/waves-display\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/var/www/wpw/wp-content/plugins/waves-display/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/var/www/wpw/wp-content/plugins/waves-display",
      "filename": "/var/www/wpw/wp-content/plugins/waves-display/gulpfile.babel.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/var/www/wpw/wp-content/plugins/waves-display",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/wpw/wp-content/plugins/waves-display/gulpfile.babel.js",
        "plugins": [
          "jsx",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/wpw/wp-content/plugins/waves-display/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/wpw/wp-content/plugins/waves-display/",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.watchForChanges = exports.themeify = exports.scripts = exports.copy = exports.images = exports.styles = exports.clean = exports.reload = exports.serve = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _vinylNamed = _interopRequireDefault(require(\"vinyl-named\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _package = _interopRequireDefault(require(\"./package.json\"));\n\nvar _gulpReplace = _interopRequireDefault(require(\"gulp-replace\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// import cleanCss from 'gulp-clean-css';\n// import wpPot from \"gulp-wp-pot\";\nvar PRODUCTION = _yargs[\"default\"].argv.prod;\n\nvar server = _browserSync[\"default\"].create();\n\nvar serve = function serve(done) {\n  server.init({\n    proxy: _config[\"default\"].browserSync.proxy,\n    https: _config[\"default\"].browserSync.https,\n    port: _config[\"default\"].browserSync.port\n  });\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n};\n\nexports.reload = reload;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['dist']);\n};\n\nexports.clean = clean;\n\nvar styles = function styles() {\n  return (0, _gulp.src)(['src/scss/bundle.scss', 'src/scss/admin.scss']).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpPostcss[\"default\"])([_autoprefixer[\"default\"]]))).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe((0, _gulp.dest)('dist/css', {\n    overwrite: true\n  })).pipe(server.stream());\n};\n\nexports.styles = styles;\n\nvar images = function images() {\n  return (0, _gulp.src)('src/images/**/*.{jpg,jpeg,png,svg,gif,ico}').pipe((0, _gulp.dest)('dist/images'));\n};\n\nexports.images = images;\n\nvar copy = function copy() {\n  return (0, _gulp.src)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*']).pipe((0, _gulp.dest)('dist'));\n}; // export const wpPlugin = () => {\n//   return src(['waves-display.php'])\n//     .pipe( replace( /(Version:\\s+[0-9]+.[0-9]+.)([0-9]+)/g, function( match, p1, p2 ) {\n//       // console.log( match );\n//       // console.log( p1 );\n//       // console.log( p2 );\n//       let inc = parseInt( p2 ) + 1;\n//       console.log( p1 + inc.toString() );\n//       return p1 + inc.toString();\n//     } ) )\n//     .pipe(dest(''));\n// }\n\n\nexports.copy = copy;\n\nvar scripts = function scripts() {\n  return (0, _gulp.src)(['src/js/bundle.js', 'src/js/admin.js']).pipe((0, _vinylNamed[\"default\"])()).pipe((0, _webpackStream[\"default\"])({\n    module: {\n      rules: [{\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: []\n          }\n        }\n      }]\n    },\n    mode: PRODUCTION ? 'production' : 'development',\n    // devtool: !PRODUCTION ? 'inline-source-map' : false,\n    output: {\n      filename: '[name].js'\n    },\n    externals: {\n      jquery: 'jQuery'\n    }\n  })).pipe((0, _gulp.dest)('dist/js'));\n}; // .pipe( replace( /(Version:\\s+[0-9]+.[0-9]+.)([0-9]+)/g, ( p1, p2, p3 ) => p2 + ( parseInt( p3 ) + 1 )  ))\n\n\nexports.scripts = scripts;\n\nvar themeify = function themeify() {\n  return (0, _gulp.src)([\"**/*\", \"!node_modules{,/**}\", \"!bundled{,/**}\", \"!src{,/**}\", \"!.babelrc\", \"!.gitignore\", \"!gulpfile.babel.js\", \"!package.json\", \"!package-lock.json\", \"!stats.json\", \"!README.md\", \"!.DS_Store\"]).pipe((0, _gulpReplace[\"default\"])(\"_themename\", _package[\"default\"].theme_name)).pipe((0, _gulpReplace[\"default\"])(\"_themedescription\", _package[\"default\"].description)) // .pipe(replace(\"Version: 1.0.0\", \"Version: 1.0.\" + Date.now()))\n  // .pipe(replace(\"1.0.0\", \"1.0.\" + Date.now()))\n  .pipe((0, _gulp.dest)(\"../\".concat(_package[\"default\"].name.replace(/_/g, '-'), \"/\")));\n}; // export const pot = () => {\n//   return src(\"**/*.php\")\n//     .pipe(\n//       wpPot({\n//         domain: \"_themename\",\n//         package: info.name\n//       })\n//     )\n//   .pipe(dest(`languages/${info.name}.pot`));\n// };\n\n\nexports.themeify = themeify;\n\nvar watchForChanges = function watchForChanges() {\n  (0, _gulp.watch)('src/scss/**/*.scss', styles);\n  (0, _gulp.watch)('src/images/**/*.{jpg,jpeg,png,svg,gif,ico}', (0, _gulp.series)(images, reload));\n  (0, _gulp.watch)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*'], (0, _gulp.series)(copy, reload));\n  (0, _gulp.watch)('src/js/**/*.js', (0, _gulp.series)(scripts, reload));\n  (0, _gulp.watch)(\"**/*.php\", reload);\n};\n\nexports.watchForChanges = watchForChanges;\nvar dev = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy, scripts), serve, watchForChanges);\nexports.dev = dev;\nvar build = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy, scripts));\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "server",
        "browserSync",
        "create",
        "serve",
        "done",
        "init",
        "proxy",
        "config",
        "https",
        "port",
        "reload",
        "clean",
        "styles",
        "pipe",
        "sourcemaps",
        "on",
        "sass",
        "logError",
        "autoprefixer",
        "write",
        "overwrite",
        "stream",
        "images",
        "copy",
        "scripts",
        "module",
        "rules",
        "test",
        "use",
        "loader",
        "options",
        "presets",
        "mode",
        "output",
        "filename",
        "externals",
        "jquery",
        "themeify",
        "info",
        "theme_name",
        "description",
        "name",
        "replace",
        "watchForChanges",
        "dev",
        "build"
      ],
      "mappings": "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",
      "sourceRoot": "/var/www/wpw/wp-content/plugins/waves-display/",
      "sourcesContent": [
        "import { src, dest, watch, series, parallel } from 'gulp';\nimport yargs from 'yargs';\nimport sass from 'gulp-sass';\n// import cleanCss from 'gulp-clean-css';\nimport gulpif from 'gulp-if';\nimport postcss from 'gulp-postcss';\nimport sourcemaps from 'gulp-sourcemaps';\nimport autoprefixer from 'autoprefixer';\nimport del from 'del';\nimport webpack from 'webpack-stream';\nimport named from 'vinyl-named';\nimport browserSync from \"browser-sync\";\nimport info from \"./package.json\";\nimport replace from \"gulp-replace\";\nimport config from \"./config.json\";\n// import wpPot from \"gulp-wp-pot\";\nconst PRODUCTION = yargs.argv.prod;\nconst server = browserSync.create();\nexport const serve = done => {\n  server.init({\n    proxy: config.browserSync.proxy,\n    https: config.browserSync.https,\n    port: config.browserSync.port\n  });\n  done();\n};\nexport const reload = done => {\n  server.reload();\n  done();\n};\nexport const clean = () => del(['dist']);\n  \nexport const styles = () => {\nreturn src(['src/scss/bundle.scss', 'src/scss/admin.scss'])\n  .pipe(gulpif(!PRODUCTION, sourcemaps.init()))\n  .pipe(sass().on('error', sass.logError))\n  .pipe(gulpif(PRODUCTION, postcss([ autoprefixer ])))\n  .pipe(gulpif(!PRODUCTION, sourcemaps.write()))\n  .pipe(dest('dist/css', {overwrite: true}))\n  .pipe(server.stream());\n}\nexport const images = () => {\nreturn src('src/images/**/*.{jpg,jpeg,png,svg,gif,ico}')\n  .pipe(dest('dist/images'));\n}\nexport const copy = () => {\n  return src(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'])\n  .pipe(dest('dist'));\n}\n// export const wpPlugin = () => {\n  \n//   return src(['waves-display.php'])\n//     .pipe( replace( /(Version:\\s+[0-9]+.[0-9]+.)([0-9]+)/g, function( match, p1, p2 ) {\n//       // console.log( match );\n//       // console.log( p1 );\n//       // console.log( p2 );\n//       let inc = parseInt( p2 ) + 1;\n//       console.log( p1 + inc.toString() );\n//       return p1 + inc.toString();\n//     } ) )\n//     .pipe(dest(''));\n// }\nexport const scripts = () => {\n  return src(['src/js/bundle.js','src/js/admin.js'])\n  .pipe(named())\n  .pipe(webpack({\n    module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: []\n            }\n          }\n        }\n      ]\n    },\n    mode: PRODUCTION ? 'production' : 'development',\n    // devtool: !PRODUCTION ? 'inline-source-map' : false,\n    output: {\n      filename: '[name].js'\n    },\n    externals: {\n      jquery: 'jQuery'\n    },\n  }))\n  .pipe(dest('dist/js'));\n}\n// .pipe( replace( /(Version:\\s+[0-9]+.[0-9]+.)([0-9]+)/g, ( p1, p2, p3 ) => p2 + ( parseInt( p3 ) + 1 )  ))\nexport const themeify = () => {\n  return src([\n    \"**/*\",\n    \"!node_modules{,/**}\",\n    \"!bundled{,/**}\",\n    \"!src{,/**}\",\n    \"!.babelrc\",\n    \"!.gitignore\",\n    \"!gulpfile.babel.js\",\n    \"!package.json\",\n    \"!package-lock.json\",\n    \"!stats.json\",\n    \"!README.md\",\n    \"!.DS_Store\"\n  ])\n  .pipe(replace(\"_themename\", info.theme_name))\n  .pipe(replace(\"_themedescription\", info.description))\n  // .pipe(replace(\"Version: 1.0.0\", \"Version: 1.0.\" + Date.now()))\n  // .pipe(replace(\"1.0.0\", \"1.0.\" + Date.now()))\n  .pipe(dest(`../${info.name.replace(/_/g, '-')}/`));\n};\n// export const pot = () => {\n//   return src(\"**/*.php\")\n//     .pipe(\n//       wpPot({\n//         domain: \"_themename\",\n//         package: info.name\n//       })\n//     )\n//   .pipe(dest(`languages/${info.name}.pot`));\n// };\nexport const watchForChanges = () => {\n  watch('src/scss/**/*.scss', styles);\n  watch('src/images/**/*.{jpg,jpeg,png,svg,gif,ico}', series(images, reload));\n  watch(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'], series(copy, reload));\n  watch('src/js/**/*.js', series(scripts, reload));\n  watch(\"**/*.php\", reload);\n} \nexport const dev = series(clean, parallel(styles, images, copy, scripts), serve, watchForChanges);\nexport const build = series(clean, parallel(styles, images, copy, scripts));\nexport default dev;"
      ]
    },
    "sourceType": "script",
    "mtime": 1614743325802
  }
}